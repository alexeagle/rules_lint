load("@aspect_rules_js//js:defs.bzl", "js_library")
load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")
load("//lint/private:lint_aspect.bzl", "fail_on_violation_flag")

exports_files(glob(["*.bzl"]) + ["lint_test.sh"])

# Used as a default for vale_aspect#styles
filegroup(
    name = "empty_styles",
    srcs = [],
    visibility = ["//visibility:public"],
)

config_setting(
    name = "linux_x86",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

config_setting(
    name = "linux_aarch64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:aarch64",
    ],
)

bool_flag(
    name = "debug",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

fail_on_violation_flag(
    name = "fail_on_violation",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

config_setting(
    name = "debug_flag",
    flag_values = {
        ":debug": "true",
    },
)

js_library(
    name = "eslint.workaround_17660",
    srcs = ["eslint.workaround_17660.js"],
    visibility = ["//visibility:public"],
)

js_library(
    name = "eslint.bazel-formatter",
    srcs = ["eslint.bazel-formatter.js"],
    visibility = ["//visibility:public"],
)

bzl_library(
    name = "buf",
    srcs = ["buf.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//lint/private:lint_aspect",
        "@rules_proto//proto:defs",
    ],
)

bzl_library(
    name = "eslint",
    srcs = ["eslint.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//lint/private:lint_aspect",
        "@aspect_bazel_lib//lib:copy_to_bin",
        "@aspect_rules_js//js:libs",
    ],
)

bzl_library(
    name = "lint_test",
    srcs = ["lint_test.bzl"],  # keep
    visibility = ["//visibility:public"],
    deps = ["@aspect_bazel_lib//lib:paths"],
)

bzl_library(
    name = "flake8",
    srcs = ["flake8.bzl"],
    visibility = ["//visibility:public"],
    deps = ["//lint/private:lint_aspect"],
)

bzl_library(
    name = "pmd",
    srcs = ["pmd.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//lint/private:lint_aspect",
        "@bazel_tools//tools/build_defs/repo:http.bzl",
        "@bazel_tools//tools/build_defs/repo:utils.bzl",
    ],
)

bzl_library(
    name = "ruff",
    srcs = ["ruff.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        ":ruff_versions",
        "//lint/private:lint_aspect",
        "@bazel_skylib//lib:versions",
        "@bazel_tools//tools/build_defs/repo:http.bzl",
        "@bazel_tools//tools/build_defs/repo:utils.bzl",
    ],
)

bzl_library(
    name = "golangci-lint",
    srcs = ["golangci-lint.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//lint/private:lint_aspect",
        "@bazel_skylib//rules:native_binary",
        "@bazel_tools//tools/build_defs/repo:http.bzl",
        "@bazel_tools//tools/build_defs/repo:utils.bzl",
        "@io_bazel_rules_go//go:def",
    ],
)

bzl_library(
    name = "shellcheck",
    srcs = ["shellcheck.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//lint/private:lint_aspect",
        "//lint/private:maybe",
        "@bazel_skylib//rules:native_binary",
        "@bazel_tools//tools/build_defs/repo:http.bzl",
        "@bazel_tools//tools/build_defs/repo:utils.bzl",
    ],
)

bzl_library(
    name = "ruff_versions",
    srcs = ["ruff_versions.bzl"],
    visibility = ["//visibility:public"],
)

bzl_library(
    name = "vale",
    srcs = ["vale.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        ":vale_library",
        ":vale_versions",
        "//lint/private:lint_aspect",
        "@bazel_tools//tools/build_defs/repo:http.bzl",
        "@bazel_tools//tools/build_defs/repo:utils.bzl",
    ],
)

bzl_library(
    name = "vale_versions",
    srcs = ["vale_versions.bzl"],
    visibility = ["//visibility:public"],
)

bzl_library(
    name = "vale_library",
    srcs = ["vale_library.bzl"],
    visibility = ["//visibility:public"],
)
